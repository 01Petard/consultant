<configuration debug="false">

    <!-- 日志格式定义 -->
    <property name="LOG_PATTERN_DEV" value="[%d{HH:mm:ss.SSS}] [%highlight(%-5level)] [%blue(%-22.22X{sunny-baer})] [%cyan(%-16.16thread)] [%green(%-40.40logger{40})] %msg%n"/>
    <property name="LOG_PATTERN_PROD" value="[%d{yyyy-MM-dd HH:mm:ss}] [%highlight(%-5level)] [%blue(%-22.22X{sunny-baer})] [%cyan(%-16.16thread)] [%green(%-40.40logger{40})] %msg%n"/>
    <!-- 日志输出的路径定义 -->
    <property name="LOG_FILE_PATH" value="./logs"/>
    <property name="LOG_FILE_NAME" value="${LOG_FILE_PATH}/app_log.%d{yyyy-MM-dd}.%i.log"/>
    <property name="LOG_ERROR_FILE_NAME" value="${LOG_FILE_PATH}/error_log.%d{yyyy-MM-dd}.%i.log"/>

    <!-- 通用 Logger 设置 -->
    <logger name="com.sunny.mould.mes" level="DEBUG"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN_DEV}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 正常日志文件输出（滚动 + 按时间 + 按大小） -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE_PATH}/app.log</file>
        <encoder>
            <pattern>${LOG_PATTERN_PROD}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE_NAME}</fileNamePattern>
            <maxFileSize>500MB</maxFileSize>
            <maxHistory>7</maxHistory> <!-- 只保留最近 7 天日志 -->
            <totalSizeCap>5GB</totalSizeCap> <!-- 所有日志最多 5GB -->
        </rollingPolicy>
    </appender>

    <!-- 单独输出 ERROR 级别日志到专用文件 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE_PATH}/error.log</file>
        <encoder>
            <pattern>${LOG_PATTERN_PROD}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_ERROR_FILE_NAME}</fileNamePattern>
            <maxFileSize>200MB</maxFileSize>
            <maxHistory>7</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 异步包装 STDOUT（非必须，控制台不频繁写可以不用） -->
    <appender name="ASYNC_STDOUT" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>512</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="STDOUT"/>
    </appender>

    <!-- 异步包装 FILE -->
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>2048</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="FILE"/>
    </appender>

    <!-- 异步包装 ERROR_FILE -->
    <appender name="ASYNC_ERROR_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>1024</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="ERROR_FILE"/>
    </appender>

    <!-- 开发环境：控制台 + 文件 + ERROR 文件 -->
    <springProfile name="dev,remote,local">
        <root level="INFO">
            <appender-ref ref="ASYNC_STDOUT"/>
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ASYNC_ERROR_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>

    <!-- 生产环境：控制台 + 文件 + ERROR 文件，严格日志控制 -->
    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="ASYNC_STDOUT"/>
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ASYNC_ERROR_FILE"/>
        </root>
    </springProfile>

</configuration>